!function(){"use strict";class e{constructor(e,t,n){this.name=e.name,this.link=e.link,this.templateSelector=t,this._handleCardClick=n}_setMarkup(){this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.src=this.link,this._cardImage.alt=this.name,this._cardElement.querySelector(".card__bottom-text").textContent=this.name}_getTemplateClone(){return document.querySelector(this.templateSelector).content.querySelector(".card").cloneNode(!0)}_handleLikeButton(e){e.target.classList.toggle("card__bottom-button_clicked")}_handleDeleteButton(e){this._cardElement.remove(),this._cardElement=null}_setEventListeners(){this._cardElement.querySelector(".card__bottom-button").addEventListener("click",(e=>{this._handleLikeButton(e)})),this._cardElement.querySelector(".card__delete").addEventListener("click",(e=>{this._handleDeleteButton(e)})),this._cardElement.querySelector(".card__image").addEventListener("click",(e=>{this._handleCardClick(this)}))}generateCard(){return this._cardElement=this._getTemplateClone(),this._setMarkup(),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._settings=e,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._buttonElement=this._formElement.querySelector(this._settings.submitButtonSelector)}enableValidation(){this._setEventListeners()}_setEventListeners(){this._toggleButtonState(),this._formElement.addEventListener("reset",(()=>{this._resetValidation()})),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._toggleInputError(e),this._toggleButtonState(this._inputList,this._buttonElement)}))}))}_toggleInputError(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_showInputError(e,t){const n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._settings.inputErrorClass),n.textContent=t,n.classList.add(this._settings.errorClass)}_hideInputError(e){const t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._settings.inputErrorClass),t.classList.remove(this._settings.errorClass),t.textContent=""}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_enableButton(){this._buttonElement.disabled=!1,this._buttonElement.classList.remove(this._settings.inactiveButtonClass)}_disableButton(){this._buttonElement.disabled=!0,this._buttonElement.classList.add(this._settings.inactiveButtonClass)}_toggleButtonState(){this._hasInvalidInput(this._inputList)?this._disableButton():this._enableButton()}_resetValidation(){this._disableButton(),this._inputList.forEach((e=>{this._hideInputError(e)}))}}function n(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class s{constructor(e){n(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.closePopup()})),n(this,"_handleClickClose",(e=>{e.target===e.currentTarget&&this.closePopup()})),this._popupElement=e,this._popupExit=this._popupElement.querySelector(".modal__container-exit")}openPopup(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._handleClickClose)}closePopup(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._handleClickClose)}setEventListeners(){this._popupExit.addEventListener("click",(e=>{this.closePopup()}))}}class o extends s{constructor(e,t){super(e),this._handleFormSubmit=t,this._formElement=this._popupElement.querySelector(".form"),this._inputList=this._formElement.querySelectorAll(".form__input")}_getInputValues(){const e={};return this._inputList.forEach((t=>e[t.name]=t.value)),e}setEventListeners(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}closePopup(){super.closePopup(),this._formElement.reset()}}document.querySelector(".elements__grid");const r=document.querySelector("#name-input"),i=document.querySelector("#description-input"),l=(document.querySelector(".profile__info-name").textContent,document.querySelector(".profile__info-description").textContent,document.querySelector("#title-input")),a=document.querySelector("#link-input"),c=document.querySelector("#addCard"),u=document.querySelector(".profile__edit"),d=document.querySelector(".profile__add"),_=document.querySelector("#edit"),p=(_.querySelector(".form"),c.querySelector(".form")),m=(document.querySelectorAll(".modal__container-exit"),p.querySelector("button"),document.querySelector("#pictureModal")),h={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__save",inactiveButtonClass:"form__save_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},E=Array.from(document.querySelectorAll(h.formSelector)),f=t=>{const n=new e(t,"#card-template",C).generateCard();g.addItem(n)},g=new class{constructor(e,t){let{data:n,renderer:s}=e;this._items=n,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({data:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:f},".elements__grid"),v=new o(c,(function(e){const t={name:l.value,link:a.value};f(t),v.closePopup()}));v.setEventListeners();const y=new o(_,(function(){const e={name:r.value,description:i.value};S.setUserInfo(e),y.closePopup()}));y.setEventListeners();const S=new class{constructor(e){let{nameSelector:t,descriptionSelector:n}=e;this._nameContainer=document.querySelector(t),this._descriptionContainer=document.querySelector(n)}getUserInfo(){return{name:this._nameContainer.textContent,description:this._descriptionContainer.textContent}}setUserInfo(e){let{name:t,description:n}=e;this._nameContainer.textContent=t,this._descriptionContainer.textContent=n}}({nameSelector:".profile__info-name",descriptionSelector:".profile__info-description"}),L=new class extends s{constructor(e){super(e),this._popupImage=this._popupElement.querySelector(".modal__picture-image"),this._popupText=this._popupElement.querySelector(".modal__picture-text")}openPopup(e){this._popupImage.src=e.link,this._popupImage.alt=e.name,this._popupText.textContent=e.name,super.openPopup()}}(m);function C(e){L.openPopup(e)}L.setEventListeners(),g.renderItems(),u.addEventListener("click",(function(){const e=S.getUserInfo();r.value=e.name,i.value=e.description,y.openPopup()})),d.addEventListener("click",(function(){v.openPopup()})),E.forEach((e=>{!function(e,n){new t(e,n).enableValidation()}(h,e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,